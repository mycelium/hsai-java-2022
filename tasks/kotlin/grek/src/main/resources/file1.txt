Kotlin is a cross-platform, statically typed, general-purpose programming language
with type inference. Kotlin is designed to interoperate fully with Java, and the
JVM version of Kotlin's standard library depends on the Java Class Library but type
inference allows its syntax to be more concise. Kotlin mainly targets the JVM, but also
compiles to JavaScript (e.g., for frontend web applications using React[6]) or native code
via LLVM (e.g., for native iOS apps sharing business logic with Android apps).[7] Language
development costs are borne by JetBrains,

On 7 May 2019, Google announced that the Kotlin programming language is now its preferred
language for Android app developers.[9] Since the release of Android Studio 3.0 in October 2017,
Kotlin has been included as an alternative to the standard Java compiler.
The Android Kotlin compiler produces Java 8 bytecode by default (which runs in any later JVM),
but lets the programmer choose to target Java 9 up to 17, for optimization,[10] or allows for more features;
has bidirectional record class interoperability support for JVM, introduced in Java 16, considered stable
as of Kotlin 1.5.